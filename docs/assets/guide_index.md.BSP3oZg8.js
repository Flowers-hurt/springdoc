import{_ as e,c as o,o as r,ag as t}from"./chunks/framework.DPgUu7qG.js";const h=JSON.parse('{"title":"关于 SpringDoc","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md","lastUpdated":1747127294000}'),i={name:"guide/index.md"};function n(l,a,d,s,c,p){return r(),o("div",null,a[0]||(a[0]=[t('<h1 id="关于-springdoc" tabindex="-1">关于 SpringDoc <a class="header-anchor" href="#关于-springdoc" aria-label="Permalink to &quot;关于 SpringDoc&quot;">​</a></h1><p>SpringDoc 是一款基于 JavaDoc 的 API 文档生成工具，专为 Spring Boot 应用设计。</p><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li><strong>零侵入设计</strong>：基于 <code>javadoc</code> 注释自动生成文档，无需添加额外注解</li><li><strong>完全兼容</strong>：自动生成符合规范的 <code>openapi</code> 结构体</li><li><strong>美观易用</strong>：内部整合了 Knife4j 作为接口文档的可视化界面</li></ul><h2 id="版本支持" tabindex="-1">版本支持 <a class="header-anchor" href="#版本支持" aria-label="Permalink to &quot;版本支持&quot;">​</a></h2><p>目前 SpringDoc 仅支持 SpringBoot 2.x 系列版本。我们计划在未来版本中支持 SpringBoot 3.x。</p><h2 id="优势" tabindex="-1">优势 <a class="header-anchor" href="#优势" aria-label="Permalink to &quot;优势&quot;">​</a></h2><p>与传统的 Swagger 或 SpringDoc-OpenAPI 相比，本项目具有以下优势：</p><ol><li><strong>开发体验更好</strong>：无需编写大量注解，利用 IDE 自带的 JavaDoc 支持即可完成文档编写</li><li><strong>代码更整洁</strong>：避免了代码中充斥大量与业务无关的文档注解</li><li><strong>维护更方便</strong>：文档与代码注释合一，避免了文档与代码不同步的问题</li><li><strong>界面更美观</strong>：整合 Knife4j 提供现代化的文档界面</li></ol><h2 id="工作原理" tabindex="-1">工作原理 <a class="header-anchor" href="#工作原理" aria-label="Permalink to &quot;工作原理&quot;">​</a></h2><p>SpringDoc 利用 JavaDoc 注解处理器在编译时提取注释信息，然后在运行时生成 OpenAPI 规范文档，实现了文档与代码的无缝集成。</p><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><p>查看<a href="/springdoc/guide/getting-started.html">快速开始</a>章节，了解如何在项目中集成 SpringDoc。</p>',13)]))}const u=e(i,[["render",n]]);export{h as __pageData,u as default};
